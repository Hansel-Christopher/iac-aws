name: 'Terraform Plan/Apply'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: "ap-south-1"  # Adjust to your AWS Region

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup AWS Credentials from GitHub OIDC provider
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::893304181614:role/githubaction-hostedrunner-role
        role-session-name: GitHubActionsSession

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Get changed directories
      id: changed-dirs
      uses: tj-actions/changed-files@v44
      with:
        separator: ' '
        files: '**/*.tf'

    - name: Output all changed directories
      run: echo "Changed directories: ${{ steps.changed-dirs.outputs.all_changed_files }}"

    - name: Terraform operations in changed directories
      if: steps.changed-dirs.outputs.any_changed == 'true'
      run: |
        CHANGED_DIRS=$(echo "${{ steps.changed-dirs.outputs.all_changed_files }}" | xargs -n 1 dirname | sort -u)
        for DIR in $CHANGED_DIRS; do
          echo "Running Terraform in $DIR"
          cd $DIR
          terraform init
          terraform fmt -check
          terraform plan -detailed-exitcode -no-color -out=tfplan
          terraform show -no-color tfplan
          echo "::set-output name=tfplan::$(terraform show -no-color tfplan)"
          cd -
        done
      shell: bash

    - name: Publish Terraform Plan to Task Summary
      run: echo "${{ steps.tf-plan-string.outputs.summary }}" >> $GITHUB_STEP_SUMMARY

    - name: Push Terraform Output to PR
      if: github.event_name == 'pull_request' && steps.changed-dirs.outputs.any_changed == 'true'
      uses: actions/github-script@v7
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `🔍 **Terraform Plan Summary for Changed Directories:**\n${{ steps.tf-plan-string.outputs.tfplan }}\nPlease review the proposed changes. 👀`;
            const comment = await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            });
            await github.rest.reactions.createForIssueComment({
                comment_id: comment.data.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                content: 'eyes'
            });
