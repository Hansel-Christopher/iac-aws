name: 'Terraform Plan/Apply'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: "ap-south-1"  # Adjust to your AWS Region

jobs:
  terraform:
    name: 'Terraform CI'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: arn:aws:iam::893304181614:role/githubaction-hostedrunner-role
        role-session-name: GitHubActionsSession

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v19
      with:
        files: |
          terraform/**/*.tf

    - name: Set changed directories
      id: set-changed-dirs
      run: |
        echo "changed_dirs=$(echo ${{ steps.changed-files.outputs.all_changed_files }} | xargs -n 1 dirname | sort -u)" >> $GITHUB_ENV

    - name: Terraform Init and Plan
      if: env.changed_dirs
      run: |
        for DIR in $changed_dirs; do
          echo "Running in $DIR"
          cd $DIR
          terraform init
          terraform fmt -check
          terraform plan -detailed-exitcode -no-color -out=tfplan
          terraform show -no-color tfplan > plan-output.txt
          cd -
        done

    - name: Upload Terraform Plans
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plans
        path: '**/plan-output.txt'

    - name: Create or Update Comment with Terraform Plans
      uses: peter-evans/create-or-update-comment@v4
      if: github.ref != 'refs/heads/main'
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Terraform Plans for the changed directories:
          Each directory's plan output is uploaded as an artifact.
        reactions: 'eyes'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && needs.terraform.outputs.tfplanExitCode == '2'
      run: |
        for DIR in $changed_dirs; do
          echo "Applying in $DIR"
          cd $DIR
          terraform apply -auto-approve tfplan
          cd -
        done
